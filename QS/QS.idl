// QS.idl : IDL source for QS
//

enum
{
	PROPID_OpenTimeout,
	PROPID_OnReadyStateChange,
	PROPID_ReadyState,
	PROPID_ResponsePath,
	PROPID_ResponseText,
	PROPID_ScriptEngine,
	PROPID_Status,

	METHID_Close,
	METHID_EncodeURIComponent,
	METHID_Evaluate,
	METHID_Execute,
	METHID_GetObjKey,
	METHID_InvokeMethod,
	METHID_Open,
	METHID_Parse,
	METHID_ReadAll,
	METHID_Send,
	METHID_SetObjKey,
	METHID_Stringify

};

// This file will be processed by the MIDL tool to
// produce the type library (QS.tlb) and marshalling code.

import "oaidl.idl";
import "ocidl.idl";

[
	uuid(9ED7F133-BEC0-4B73-A542-D7D86208A4C3),
	version(1.0),
	helpstring("QS 1.0 Type Library")
]
library QSLib
{
	importlib("stdole2.tlb");

	//interface IDocHostUIHandlerDispatch;
	//interface IAxWinAmbientDispatchEx;
	interface IQSApplication;
	interface IQSFile;
	interface IQSNet;
	interface IQSScriptSite;

	//----------------------------------------------------------------------
	// interface IQSApplication
	//----------------------------------------------------------------------

	[
		object,
		uuid(2C6DA222-0C4C-411A-B2EC-9486359239FE),
		dual,
		nonextensible,
		helpstring("IQSApplication Interface"),
		pointer_default(unique)
	]
	interface IQSApplication : IDispatch{
	};

	//----------------------------------------------------------------------
	// interface IQSFile
	//----------------------------------------------------------------------

	[
		object,
		uuid(110BBCE9-6C96-4B6E-A26B-81DDD5D3A845),
		dual,
		nonextensible,
		helpstring("IQSFile Interface"),
		pointer_default(unique)
	]
	interface IQSFile : IDispatch{
		[id(METHID_Close)] HRESULT Close();
		[id(METHID_Open)] HRESULT Open([in] BSTR Path, [in, defaultvalue(0x80000000L)] LONG DesiredAccess, [in, defaultvalue(1 | 2)] LONG ShareMode, [in, defaultvalue(3)] LONG CreationDisposition, [out, retval] VARIANT_BOOL* Ok);
		[id(METHID_ReadAll)] HRESULT ReadAll([out, retval] BSTR* Text);
	};

	//----------------------------------------------------------------------
	// interface IQSJScript
	//----------------------------------------------------------------------

	[
		object,
		uuid(592E77CF-7ADF-49E8-A30F-C616E3D4BFD2),
		dual,
		nonextensible,
		helpstring("IQSJScript Interface"),
		pointer_default(unique)
	]
	interface IQSJScript : IDispatch{
		[id(METHID_EncodeURIComponent)] HRESULT EncodeURIComponent([in] BSTR URI, [out, retval] BSTR* EncodedURI);
		[id(METHID_GetObjKey)] HRESULT GetObjKey([in] VARIANT JsObject, [in] VARIANT Key, [out, retval] VARIANT* Value);
		[id(METHID_Parse)] HRESULT Parse([in] BSTR JSON, [out, retval] VARIANT* JsObject);
		[id(METHID_SetObjKey)] HRESULT SetObjKey([in] VARIANT JsObject, [in] VARIANT Key, [in] VARIANT Value);
		[id(METHID_Stringify)] HRESULT Stringify([in] VARIANT JsObject, [in, optional] VARIANT Replacer, [in, optional] VARIANT Space, [out, retval] BSTR* JSON);

	};

	//----------------------------------------------------------------------
	// interface IQSNet
	//----------------------------------------------------------------------

	[
		object,
		uuid(CBD7F1C4-37B8-469D-B0C2-C283DF355C65),
		dual,
		nonextensible,
		helpstring("IQSNet Interface"),
		pointer_default(unique)
	]
	interface IQSNet : IDispatch{
		[id(PROPID_OnReadyStateChange), propget] HRESULT OnReadyStateChange([out, retval] IDispatch** OnReadyStateChange);
		[id(PROPID_OnReadyStateChange), propputref] HRESULT OnReadyStateChange([in] IDispatch* OnReadyStateChange);
		[id(PROPID_OpenTimeout), propget] HRESULT OpenTimeout([out, retval] LONG* OpenTimeout);
		[id(PROPID_OpenTimeout), propput] HRESULT OpenTimeout([in] LONG OpenTimeout);
		[id(PROPID_ReadyState), propget] HRESULT ReadyState([out, retval] LONG* ReadyState);
		[id(PROPID_ResponsePath), propget] HRESULT ResponsePath([out, retval] BSTR* ResponsePath);
		[id(PROPID_ResponsePath), propput] HRESULT ResponsePath([in] BSTR ResponsePath);
		[id(PROPID_ResponseText), propget] HRESULT ResponseText([out, retval] BSTR* ResponseText);
		[id(PROPID_Status), propget] HRESULT Status([out, retval] LONG* Status);
		[id(METHID_Close)] HRESULT Close();
		[id(METHID_Open)] HRESULT Open([in] BSTR Method, [in] BSTR URL, [in, optional] VARIANT Async);
		[id(METHID_Send)] HRESULT Send([in, optional] VARIANT Body);
	};

	//---------------------------------------------------------------------
	// interface IQSScriptSite
	//----------------------------------------------------------------------

	[
		object,
		uuid(90B698CC-B837-41DF-928D-2440612AC247),
		dual,
		nonextensible,
		helpstring("IQSScriptSite Interface"),
		pointer_default(unique)
	]
	interface IQSScriptSite : IDispatch{
		[id(PROPID_ScriptEngine), propput] HRESULT ScriptEngine(BSTR ScriptEngine);
		[id(METHID_Close)] HRESULT Close();
		[id(METHID_Evaluate)] HRESULT Evaluate([in] BSTR Script, [in, optional] VARIANT Context, [out, retval] VARIANT* Result);
		[id(METHID_Execute)] HRESULT Execute([in] BSTR Script, [in, optional] VARIANT Context);
		[id(METHID_InvokeMethod)] HRESULT InvokeMethod([in] BSTR Name, [in, optional] VARIANT Arg1, [in, optional] VARIANT Arg2, [in, optional] VARIANT Arg3, [out, retval] VARIANT* Result);

	};

	//----------------------------------------------------------------------
	// coclass QSApplication
	//----------------------------------------------------------------------

	[
		uuid(1CF388F9-847C-4F7D-B481-8E0166792D16),
		helpstring("QSApplication Class")
	]
	coclass QSApplication
	{
		[default] interface IQSApplication;
	};

	//----------------------------------------------------------------------
	// coclass QSFile
	//----------------------------------------------------------------------

	[
		uuid(846375FC-3C2F-4CDD-BACE-D465F8835FCA),
		helpstring("QSFile Class")
	]
	coclass QSFile
	{
		[default] interface IQSFile;
	};

	//----------------------------------------------------------------------
	// coclass QSJScript
	//----------------------------------------------------------------------

	[
		uuid(FAA3326B-3270-4533-B5E6-60454A95A75A),
		helpstring("QSJScript Class")
	]
	coclass QSJScript
	{
		[default] interface IQSJScript;
	};

	//----------------------------------------------------------------------
	// coclass QSNet
	//----------------------------------------------------------------------

	[
		uuid(179C9CA4-7077-44CB-8D75-B51E8A8362EC),
		helpstring("QSNet Class")
	]
	coclass QSNet
	{
		[default] interface IQSNet;
	};

	//----------------------------------------------------------------------
	// coclass QSScriptSite
	//----------------------------------------------------------------------

	[
		uuid(E3B84835-0590-4F24-8BC5-4CBA6FCF4605),
		helpstring("QSScriptSite Class")
	]
	coclass QSScriptSite
	{
		[default] interface IQSScriptSite;
	};

	//----------------------------------------------------------------------
	//
	//----------------------------------------------------------------------

};
