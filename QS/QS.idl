// QS.idl : IDL source for QS
//

enum
{
	PROPID_ScriptEngine,

	METHID_Close,
	METHID_Evaluate,
	METHID_Execute,
	METHID_ImportScript,
	METHID_InvokeScript,
	METHID_Open

};

// This file will be processed by the MIDL tool to
// produce the type library (QS.tlb) and marshalling code.

import "oaidl.idl";
import "ocidl.idl";

[
	object,
	uuid(CBD7F1C4-37B8-469D-B0C2-C283DF355C65),
	dual,
	nonextensible,
	helpstring("IQSNet Interface"),
	pointer_default(unique)
]
interface IQSNet : IDispatch{
};
[
	uuid(9ED7F133-BEC0-4B73-A542-D7D86208A4C3),
	version(1.0),
	helpstring("QS 1.0 Type Library")
]
library QSLib
{
	importlib("stdole2.tlb");

	//interface IDocHostUIHandlerDispatch;
	//interface IAxWinAmbientDispatchEx;

	//----------------------------------------------------------------------
	//
	//----------------------------------------------------------------------

	[
		object,
		uuid(2C6DA222-0C4C-411A-B2EC-9486359239FE),
		dual,
		nonextensible,
		helpstring("IQSApplication Interface"),
		pointer_default(unique)
	]
	interface IQSApplication : IDispatch{
	};

	//----------------------------------------------------------------------
	//
	//----------------------------------------------------------------------

	[
		object,
		uuid(90B698CC-B837-41DF-928D-2440612AC247),
		dual,
		nonextensible,
		helpstring("IQSScriptSite Interface"),
		pointer_default(unique)
	]
	interface IQSScriptSite : IDispatch{
		[id(PROPID_ScriptEngine), propput] HRESULT ScriptEngine(BSTR ScriptEngine);
		[id(METHID_Close)] HRESULT Close();
		[id(METHID_Evaluate)] HRESULT Evaluate([in] BSTR Script, [in, optional] VARIANT Context, [out, retval] VARIANT* Result);
		[id(METHID_Execute)] HRESULT Execute([in] BSTR Script, [in, optional] VARIANT Context);
		[id(METHID_ImportScript)] HRESULT ImportScript([in] BSTR Script, [in] BSTR ScriptEngine, [in, optional] VARIANT Context);
		[id(METHID_InvokeScript)] HRESULT InvokeScript([in] BSTR Name, [in, optional] VARIANT Arg1, [in, optional] VARIANT Arg2, [in, optional] VARIANT Arg3, [out, retval] VARIANT* Result);

	};

	//----------------------------------------------------------------------
	//
	//----------------------------------------------------------------------

	[
		uuid(1CF388F9-847C-4F7D-B481-8E0166792D16),
		helpstring("QSApplication Class")
	]
	coclass QSApplication
	{
		[default] interface IQSApplication;
	};

	//----------------------------------------------------------------------
	//
	//----------------------------------------------------------------------

	[
		uuid(E3B84835-0590-4F24-8BC5-4CBA6FCF4605),
		helpstring("QSScriptSite Class")
	]
	coclass QSScriptSite
	{
		[default] interface IQSScriptSite;
	};

	//----------------------------------------------------------------------
	//
	//----------------------------------------------------------------------

	[
		uuid(179C9CA4-7077-44CB-8D75-B51E8A8362EC),
		helpstring("QSNet Class")
	]
	coclass QSNet
	{
		[default] interface IQSNet;
	};

};
